Things need to be done before the first session:
Install python3
Install pygame:
    In terminal, type: python3 pip install pygame
Download game assets
Set up file system (could have ninjas do this, up to you)
Install a python code editor
    I recommend VSCode

Things senseis should know:
Basic python (everything in python Differences below)
Pygame essentials:
    Surfaces are drawn in the order that they are made before the display.update().
    Imagine the first .blit as having a z of 0, the second as a z of 1, etc. This ordering will
    be reconsidered every update.
    
DAY 1:
    Overview:
    - Explain the differences between javascript and python on a basic level.
    - Basic game programming theory
    - setting up the game and the background

    Python Differences:
        no ;
        : instead of {}
            Indentation
        no () for if statements - optional
        Loops:
            for loops:
                for i in range(5):
                    print("This will be printed 5 times!")
                explain what range does
            for-each loops:
                numList = [42, 28, 39, 18, 92]
                for num in numList:
                    print(num) #this will print each number once
            while loops:
                while i < 5:
                    print("This will be printed 5 times!")
                    i -= 1
            (OPTIONAL: Do While)
        dot operator
        Tuples, Lists, (dicts?)
        Comments/Documentation
        Python convention:
            CAPS for final variables
    Game Theory:
        Game setup/loop
    Start coding!
        File system set up
        Set up like the book
        Explain:
            RGB set up
            Drawing shapes in detail (outline the parameters in the method call)
            adding assets


DAY 2:
    Overview:
        Nested for loops
        OOP
        Inheritance
        Instantiation

    Teach:
        Nested for loops
            Both with range() and for-each loop
            Make and use an example
        OOP + Inheritance
            Use animal example to explain.
                Superclass: Pets 
                    eat(), speak(), number_of_legs, name
                Subclass: Dog, Cat, Lizard
                    rollover(), breed
                    color, stripes, stalk()
                    sunbathe(), spikes
        Frame Rates
    
    Start coding!
        Main file should be called VampirePizzaAttack.py and other should be MonsterFoods.py

DAY 3:
    Overview:
        2d arrays
        conditionals

    Teach:
        2d arrays
            how it makes a grid
            ask what a 3d array would look like irl and in coding?
        0 indexing (they should already know this)
        floor division
        conditionals (again, should already know this)
            ==, !=, >, <, >=, <=
            and / or
        type-casting
        modulus
        boolean conversions

DAY 4:
    Overview:
        Adding and applying new traps
        Adding interaction between pizza and traps
        Adds class struture

    Teach:
        Review Inheritance
        how method calls work
        


        




